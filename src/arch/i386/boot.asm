;; [RKernel i386 boot]
;;    Author: Igorek536
;;   Version: 0.0.1
;; Assembler: FASM 1.73.04

use32                               ; Собираем в 32 битном режиме
format ELF                          ; Формат ELF

public start                        ; Глобальная метка _start
section '.text'                     ; Секция кода

; Директива equ - присваивает метке значение, которое определяется как результат
; целочисленного выражения в правой части. Результатом может быть целое число,
; адрес или любая строка символов.
MAGIC equ 0x1BADB002
FLAGS equ 0x00
CHECK equ - (MAGIC + FLAGS)

dd MAGIC                            ; Резервируем DWORD MAGIC
dd FLAGS                            ; Резервируем DWORD FLAGS
dd CHECK                            ; Резервируем DWORD CHECK

; align сообщает компоновщику о том, что нужно обеспечить размещение
; начала сегмента на заданной границе. Это важно, посколько при правильном
; выравнивании доступ к данным в процессорах x86 выполняется быстрее.
; Допустимые значения:
;
; - BYTE  - выравнивание не выполняется. Сегмент может начинаться с любого
;           адреса памяти
;
; - WORD  - сегмент начинается по адресу, кратному двум, то есть последний
;           (младший) значащий бит физического адреса равен 0
;           (выравнивание на границу слова)
;
; - DWORD - сегмент начинается по адресу, кратному четырем, то есть два
;           последних (младших) значащих бита равны 0 (выравнивание по границе
;           двойного слова)
;
align 4

start:
    cli                             ; Отключаем прерывания
    finit                           ; Включаем FPU
    mov esp, stack_space            ; Указатель стека, иначе С код не будет работать
    extrn kmain                     ; Сообщаем что функция kmain расположена не тут
    call kmain                      ; Дергаем функцию из C кода
    hlt                             ; Останавливаем процессор

section '.bss'
rb 65535                            ; 65 КБ на стек
stack_space:
